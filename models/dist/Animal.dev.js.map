{"version":3,"sources":["Animal.js"],"names":["mongoose","require","config","Promise","global","connect","process","env","DB_STRING","Schema","animalSchema","zoo","type","String","required","scientificName","commonName","givenName","gender","dateOfBirth","Date","age","Number","isTransportable","Boolean","collection","module","exports","Animal","model"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;;;AACAF,QAAQ,CAACG,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACAH,QAAQ,CAACK,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,E,CAEA;;AACA,IAAIC,MAAM,GAAGT,QAAQ,CAACS,MAAtB,C,CACA;;AACA,IAAIC,YAAY,GAAG,IAAID,MAAJ,CACf;AACI;AACAE,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,MADL;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAFT;AAMI;AACAC,EAAAA,cAAc,EAAE;AACZH,IAAAA,IAAI,EAAEC,MADM;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAPpB;AAWI;AACAE,EAAAA,UAAU,EAAE;AACRJ,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAZhB;AAgBI;AACAG,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAjBf;AAqBI;AACAI,EAAAA,MAAM,EAAE;AACJN,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAtBZ;AA0BI;AACAK,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEQ,IADG;AAETN,IAAAA,QAAQ,EAAE;AAFD,GA3BjB;AA+BI;AACAO,EAAAA,GAAG,EAAE;AACDT,IAAAA,IAAI,EAAEU,MADL;AAEDR,IAAAA,QAAQ,EAAE;AAFT,GAhCT;AAoCI;AACAS,EAAAA,eAAe,EAAE;AACbX,IAAAA,IAAI,EAAEY,OADO;AAEbV,IAAAA,QAAQ,EAAE;AAFG;AArCrB,CADe,EA2Cf;AACA;AACIW,EAAAA,UAAU,EAAE;AADhB,CA5Ce,CAAnB;AAmDAC,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB5B,QAAQ,CAAC6B,KAAT,CAAe,QAAf,EAAyBnB,YAAzB,CAAxB","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\n\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\n// Connect to database\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(process.env.DB_STRING);\r\n\r\n// Create schema variable\r\nlet Schema = mongoose.Schema;\r\n// Define a new schema for the animal data\r\nlet animalSchema = new Schema(\r\n    {\r\n        // Define a field for the zoo where the animal resides\r\n        zoo: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        // Define a field for the scientific name of the animal\r\n        scientificName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        // Define a field for the common name of the animal\r\n        commonName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        // Define a field for the given name of the animal\r\n        givenName: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        // Define a field for the gender of the animal\r\n        gender: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        // Define a field for the date of birth of the animal\r\n        dateOfBirth: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        // Define a field for the age of the animal\r\n        age: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        // Define a field for whether the animal is transportable or not\r\n        isTransportable: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    },\r\n    // Specify additional options for the schema, such as collection name\r\n    {\r\n        collection: 'animals'\r\n    }\r\n);\r\n\r\n\r\n\r\nmodule.exports.Animal = mongoose.model('animal', animalSchema);"],"file":"Animal.dev.js"}